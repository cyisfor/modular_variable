set(MODVARDIR ${CMAKE_CURRENT_BINARY_DIR}/modvar)
file(MAKE_DIRECTORY ${MODVARDIR})
include_directories(${MODVARDIR})
function(modular_variable)
	cmake_parse_arguments(PARSE_ARGV 1 V
		[] [TYPE;INIT] "MODULES")
	set(name ${ARGV0})
	set(type ${V_TYPE})
	set(init ${V_INIT})
	foreach(suffix IN ITEMS h internal.h c)
		set(output ${MODVARDIR}/${name}.${suffix})
		get_cmake_property(_variableNames VARIABLES)
		list (SORT _variableNames)
		foreach (_variableName ${_variableNames})
			message(STATUS "${_variableName}=${${_variableName}}")
		endforeach()
		file(LOCK ${output})
		set(targets)
		foreach(module IN LISTS "${V_MODULES}")
			set(input ${CMAKE_CURRENT_SOURCE_DIR}/modvar/${module}.${suffix}.in)
			message(DERP ${input})
			if(EXISTS ${input})
				configure_file(${input} ${output}.temp1)
				file(APPEND ${output}.temp file(READ ${OUTPUT}.temp1))
				list(APPEND targets ${input})
			endif()
		endforeach(module)
		if(EXISTS ${output}.temp)
#			file(REMOVE ${output}.temp1)
			file(RENAME ${output}.temp ${output})
		endif()
		file(LOCK ${output} RELEASE)
	endforeach(suffix)
endfunction(modular_variable)
